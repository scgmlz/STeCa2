# top-level project

cmake_minimum_required (VERSION 2.8.12 FATAL_ERROR)

set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
include(PreventInSourceBuilds)

project (SteCa2)

if (CMAKE_VERSION VERSION_LESS "3.1")
  set (CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")
else ()
  set (CMAKE_CXX_STANDARD 11)
endif ()

set (CMAKE_AUTOMOC ON)
set (CMAKE_AUTORCC ON)
set (CMAKE_INCLUDE_CURRENT_DIR OFF)

if (CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
  add_compile_options("-Wall")
endif ()

if (WITH_COVERAGE)
  set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --coverage")
endif ()

# if defined, enables development-helping code
if (DEVELOPMENT)
  add_definitions (-DDEVELOPMENT)
endif ()

find_package (Qt5Core       REQUIRED)
find_package (Qt5Gui        REQUIRED)
find_package (Qt5Test       REQUIRED)
find_package (Qt5Widgets    REQUIRED)
find_package (Qt5Network    REQUIRED)

add_subdirectory (lib)
add_subdirectory (LevMar)
add_subdirectory (core)
add_subdirectory (io)
add_subdirectory (gui)

if (WITH_TESTS)
  add_subdirectory (tests)
endif ()

# eof
